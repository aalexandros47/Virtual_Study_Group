{"ast":null,"code":"import { db } from '../firebase';\nimport firebase from 'firebase/compat/app'; // Ensure firebase is imported\n\nexport default {\n  name: 'ResourceShare',\n  props: {\n    studyGroupId: String\n  },\n  data() {\n    return {\n      newResourceName: '',\n      newResourceUrl: '',\n      resources: []\n    };\n  },\n  methods: {\n    async postResource() {\n      if (this.newResourceName.trim() === '' || this.newResourceUrl.trim() === '') return;\n      const resource = {\n        name: this.newResourceName,\n        url: this.newResourceUrl,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      };\n      try {\n        await db.collection('studyGroups').doc(this.studyGroupId).collection('resources').add(resource);\n        this.newResourceName = '';\n        this.newResourceUrl = '';\n      } catch (error) {\n        console.error('Error posting resource:', error);\n      }\n    },\n    fetchResources() {\n      db.collection('studyGroups').doc(this.studyGroupId).collection('resources').orderBy('timestamp').onSnapshot(snapshot => {\n        this.resources = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n      });\n    }\n  },\n  created() {\n    this.fetchResources();\n  }\n};","map":{"version":3,"names":["db","firebase","name","props","studyGroupId","String","data","newResourceName","newResourceUrl","resources","methods","postResource","trim","resource","url","timestamp","firestore","FieldValue","serverTimestamp","collection","doc","add","error","console","fetchResources","orderBy","onSnapshot","snapshot","docs","map","id","created"],"sources":["/Users/ag47/virtual-study-group-platfor Design/src/components/ResourceShare.vue"],"sourcesContent":["<template>\n  <div class=\"resource-share\">\n    <h3 class=\"text-2xl font-bold mb-4\">Resources</h3>\n    <div class=\"resources mb-4\">\n      <div\n        v-for=\"resource in resources\"\n        :key=\"resource.id\"\n        class=\"resource bg-gray-200 p-2 rounded-lg mb-2\"\n      >\n        <a\n          :href=\"resource.url\"\n          target=\"_blank\"\n          class=\"font-bold text-blue-500\"\n          >{{ resource.name }}</a\n        >\n      </div>\n    </div>\n    <form @submit.prevent=\"postResource\" class=\"resource-form\">\n      <input\n        type=\"text\"\n        v-model=\"newResourceName\"\n        placeholder=\"Resource name\"\n        class=\"w-full p-2 border rounded-lg mb-2 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n      />\n      <input\n        type=\"url\"\n        v-model=\"newResourceUrl\"\n        placeholder=\"Resource URL\"\n        class=\"w-full p-2 border rounded-lg mb-2 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n      />\n      <button\n        type=\"submit\"\n        class=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-full transition duration-300\"\n      >\n        Update Resource\n      </button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { db } from '../firebase';\nimport firebase from 'firebase/compat/app'; // Ensure firebase is imported\n\nexport default {\n  name: 'ResourceShare',\n  props: {\n    studyGroupId: String,\n  },\n  data() {\n    return {\n      newResourceName: '',\n      newResourceUrl: '',\n      resources: [],\n    };\n  },\n  methods: {\n    async postResource() {\n      if (\n        this.newResourceName.trim() === '' ||\n        this.newResourceUrl.trim() === ''\n      )\n        return;\n      const resource = {\n        name: this.newResourceName,\n        url: this.newResourceUrl,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      };\n      try {\n        await db\n          .collection('studyGroups')\n          .doc(this.studyGroupId)\n          .collection('resources')\n          .add(resource);\n        this.newResourceName = '';\n        this.newResourceUrl = '';\n      } catch (error) {\n        console.error('Error posting resource:', error);\n      }\n    },\n    fetchResources() {\n      db.collection('studyGroups')\n        .doc(this.studyGroupId)\n        .collection('resources')\n        .orderBy('timestamp')\n        .onSnapshot((snapshot) => {\n          this.resources = snapshot.docs.map((doc) => ({\n            id: doc.id,\n            ...doc.data(),\n          }));\n        });\n    },\n  },\n  created() {\n    this.fetchResources();\n  },\n};\n</script>\n\n<style scoped>\n.resource-share {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.resource-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.resource {\n  padding: 1em;\n  border-radius: 8px;\n  background-color: #f0f0f0;\n  margin-bottom: 1em;\n}\n\n.resource a {\n  color: #007bff;\n  text-decoration: none;\n}\n\n.resource a:hover {\n  text-decoration: underline;\n}\n</style>\n"],"mappings":"AAyCA,SAASA,EAAC,QAAS,aAAa;AAChC,OAAOC,QAAO,MAAO,qBAAqB,EAAE;;AAE5C,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,YAAY,EAAEC;EAChB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,EAAE;MACnBC,cAAc,EAAE,EAAE;MAClBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IACE,IAAI,CAACJ,eAAe,CAACK,IAAI,CAAC,MAAM,EAAC,IACjC,IAAI,CAACJ,cAAc,CAACI,IAAI,CAAC,MAAM,EAAC,EAEhC;MACF,MAAMC,QAAO,GAAI;QACfX,IAAI,EAAE,IAAI,CAACK,eAAe;QAC1BO,GAAG,EAAE,IAAI,CAACN,cAAc;QACxBO,SAAS,EAAEd,QAAQ,CAACe,SAAS,CAACC,UAAU,CAACC,eAAe,CAAC;MAC3D,CAAC;MACD,IAAI;QACF,MAAMlB,EAAC,CACJmB,UAAU,CAAC,aAAa,EACxBC,GAAG,CAAC,IAAI,CAAChB,YAAY,EACrBe,UAAU,CAAC,WAAW,EACtBE,GAAG,CAACR,QAAQ,CAAC;QAChB,IAAI,CAACN,eAAc,GAAI,EAAE;QACzB,IAAI,CAACC,cAAa,GAAI,EAAE;MAC1B,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDE,cAAcA,CAAA,EAAG;MACfxB,EAAE,CAACmB,UAAU,CAAC,aAAa,EACxBC,GAAG,CAAC,IAAI,CAAChB,YAAY,EACrBe,UAAU,CAAC,WAAW,EACtBM,OAAO,CAAC,WAAW,EACnBC,UAAU,CAAEC,QAAQ,IAAK;QACxB,IAAI,CAAClB,SAAQ,GAAIkB,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAET,GAAG,KAAM;UAC3CU,EAAE,EAAEV,GAAG,CAACU,EAAE;UACV,GAAGV,GAAG,CAACd,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;IACN;EACF,CAAC;EACDyB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACP,cAAc,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}