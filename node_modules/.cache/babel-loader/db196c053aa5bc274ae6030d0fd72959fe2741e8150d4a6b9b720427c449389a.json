{"ast":null,"code":"import { createStore } from 'vuex';\nimport api from '../services/api';\nexport default createStore({\n  state: {\n    user: null,\n    studyGroups: []\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n    },\n    setStudyGroups(state, studyGroups) {\n      state.studyGroups = studyGroups;\n    }\n  },\n  actions: {\n    async fetchStudyGroups({\n      commit\n    }) {\n      try {\n        const response = await api.getStudyGroups();\n        commit('setStudyGroups', response.data);\n      } catch (error) {\n        console.error('Error fetching study groups:', error);\n      }\n    },\n    async login({\n      commit\n    }, user) {\n      try {\n        const response = await api.loginUser(user);\n        commit('setUser', response.data);\n      } catch (error) {\n        console.error('Error logging in:', error);\n      }\n    },\n    async register({\n      commit\n    }, user) {\n      try {\n        const response = await api.registerUser(user);\n        commit('setUser', response.data);\n      } catch (error) {\n        console.error('Error registering:', error);\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","api","state","user","studyGroups","mutations","setUser","setStudyGroups","actions","fetchStudyGroups","commit","response","getStudyGroups","data","error","console","login","loginUser","register","registerUser","modules"],"sources":["/Users/ag47/virtual-study-group-platform/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\nimport api from '../services/api';\n\nexport default createStore({\n  state: {\n    user: null,\n    studyGroups: [],\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n    },\n    setStudyGroups(state, studyGroups) {\n      state.studyGroups = studyGroups;\n    },\n  },\n  actions: {\n    async fetchStudyGroups({ commit }) {\n      try {\n        const response = await api.getStudyGroups();\n        commit('setStudyGroups', response.data);\n      } catch (error) {\n        console.error('Error fetching study groups:', error);\n      }\n    },\n    async login({ commit }, user) {\n      try {\n        const response = await api.loginUser(user);\n        commit('setUser', response.data);\n      } catch (error) {\n        console.error('Error logging in:', error);\n      }\n    },\n    async register({ commit }, user) {\n      try {\n        const response = await api.registerUser(user);\n        commit('setUser', response.data);\n      } catch (error) {\n        console.error('Error registering:', error);\n      }\n    },\n  },\n  modules: {},\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,GAAG,MAAM,iBAAiB;AAEjC,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,IAAI,EAAE,IAAI;IACVC,WAAW,EAAE;EACf,CAAC;EACDC,SAAS,EAAE;IACTC,OAAOA,CAACJ,KAAK,EAAEC,IAAI,EAAE;MACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDI,cAAcA,CAACL,KAAK,EAAEE,WAAW,EAAE;MACjCF,KAAK,CAACE,WAAW,GAAGA,WAAW;IACjC;EACF,CAAC;EACDI,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,cAAc,CAAC,CAAC;QAC3CF,MAAM,CAAC,gBAAgB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IACD,MAAME,KAAKA,CAAC;MAAEN;IAAO,CAAC,EAAEP,IAAI,EAAE;MAC5B,IAAI;QACF,MAAMQ,QAAQ,GAAG,MAAMV,GAAG,CAACgB,SAAS,CAACd,IAAI,CAAC;QAC1CO,MAAM,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C;IACF,CAAC;IACD,MAAMI,QAAQA,CAAC;MAAER;IAAO,CAAC,EAAEP,IAAI,EAAE;MAC/B,IAAI;QACF,MAAMQ,QAAQ,GAAG,MAAMV,GAAG,CAACkB,YAAY,CAAChB,IAAI,CAAC;QAC7CO,MAAM,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;IACF;EACF,CAAC;EACDM,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}