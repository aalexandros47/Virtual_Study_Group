{"ast":null,"code":"import { createStore } from 'vuex';\nimport { auth, db } from '../firebase';\nexport default createStore({\n  state: {\n    user: null,\n    studyGroups: [],\n    authError: null,\n    authMessage: null\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n    },\n    setStudyGroups(state, studyGroups) {\n      state.studyGroups = studyGroups;\n    },\n    setAuthError(state, error) {\n      state.authError = error;\n    },\n    setAuthMessage(state, message) {\n      state.authMessage = message;\n    }\n  },\n  actions: {\n    async fetchStudyGroups({\n      commit\n    }) {\n      try {\n        const snapshot = await db.collection('studyGroups').get();\n        const studyGroups = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        commit('setStudyGroups', studyGroups);\n      } catch (error) {\n        console.error('Error fetching study groups:', error);\n      }\n    },\n    async login({\n      commit\n    }, {\n      email,\n      password\n    }) {\n      try {\n        const userCredential = await auth.signInWithEmailAndPassword(email, password);\n        commit('setUser', userCredential.user);\n        commit('setAuthMessage', 'Login successful!');\n        commit('setAuthError', null);\n      } catch (error) {\n        commit('setAuthError', error.message);\n        commit('setAuthMessage', null);\n        console.error('Error logging in:', error);\n      }\n    },\n    async register({\n      commit\n    }, {\n      email,\n      password\n    }) {\n      try {\n        const userCredential = await auth.createUserWithEmailAndPassword(email, password);\n        commit('setUser', userCredential.user);\n        commit('setAuthMessage', 'Registration successful!');\n        commit('setAuthError', null);\n      } catch (error) {\n        commit('setAuthError', error.message);\n        commit('setAuthMessage', null);\n        console.error('Error registering:', error);\n      }\n    },\n    async logout({\n      commit\n    }) {\n      try {\n        await auth.signOut();\n        commit('setUser', null);\n        commit('setAuthMessage', 'Logout successful!');\n        commit('setAuthError', null);\n      } catch (error) {\n        commit('setAuthError', error.message);\n        commit('setAuthMessage', null);\n        console.error('Error logging out:', error);\n      }\n    },\n    async createStudyGroup({\n      commit,\n      state\n    }, studyGroup) {\n      try {\n        const newGroup = {\n          ...studyGroup,\n          members: [state.user.uid],\n          createdBy: state.user.uid\n        };\n        await db.collection('studyGroups').add(newGroup);\n        commit('setAuthMessage', 'Study group created successfully!');\n      } catch (error) {\n        commit('setAuthError', error.message);\n        console.error('Error creating study group:', error);\n      }\n    },\n    async joinStudyGroup({\n      commit,\n      state\n    }, groupId) {\n      try {\n        const groupRef = db.collection('studyGroups').doc(groupId);\n        await groupRef.update({\n          members: firebase.firestore.FieldValue.arrayUnion(state.user.uid)\n        });\n        commit('setAuthMessage', 'Successfully joined the study group!');\n      } catch (error) {\n        commit('setAuthError', error.message);\n        console.error('Error joining study group:', error);\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","auth","db","state","user","studyGroups","authError","authMessage","mutations","setUser","setStudyGroups","setAuthError","error","setAuthMessage","message","actions","fetchStudyGroups","commit","snapshot","collection","get","docs","map","doc","id","data","console","login","email","password","userCredential","signInWithEmailAndPassword","register","createUserWithEmailAndPassword","logout","signOut","createStudyGroup","studyGroup","newGroup","members","uid","createdBy","add","joinStudyGroup","groupId","groupRef","update","firebase","firestore","FieldValue","arrayUnion","modules"],"sources":["/Users/ag47/virtual-study-group-platform/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\nimport { auth, db } from '../firebase';\n\nexport default createStore({\n  state: {\n    user: null,\n    studyGroups: [],\n    authError: null,\n    authMessage: null,\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n    },\n    setStudyGroups(state, studyGroups) {\n      state.studyGroups = studyGroups;\n    },\n    setAuthError(state, error) {\n      state.authError = error;\n    },\n    setAuthMessage(state, message) {\n      state.authMessage = message;\n    },\n  },\n  actions: {\n    async fetchStudyGroups({ commit }) {\n      try {\n        const snapshot = await db.collection('studyGroups').get();\n        const studyGroups = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        commit('setStudyGroups', studyGroups);\n      } catch (error) {\n        console.error('Error fetching study groups:', error);\n      }\n    },\n    async login({ commit }, { email, password }) {\n      try {\n        const userCredential = await auth.signInWithEmailAndPassword(\n          email,\n          password\n        );\n        commit('setUser', userCredential.user);\n        commit('setAuthMessage', 'Login successful!');\n        commit('setAuthError', null);\n      } catch (error) {\n        commit('setAuthError', error.message);\n        commit('setAuthMessage', null);\n        console.error('Error logging in:', error);\n      }\n    },\n    async register({ commit }, { email, password }) {\n      try {\n        const userCredential = await auth.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n        commit('setUser', userCredential.user);\n        commit('setAuthMessage', 'Registration successful!');\n        commit('setAuthError', null);\n      } catch (error) {\n        commit('setAuthError', error.message);\n        commit('setAuthMessage', null);\n        console.error('Error registering:', error);\n      }\n    },\n    async logout({ commit }) {\n      try {\n        await auth.signOut();\n        commit('setUser', null);\n        commit('setAuthMessage', 'Logout successful!');\n        commit('setAuthError', null);\n      } catch (error) {\n        commit('setAuthError', error.message);\n        commit('setAuthMessage', null);\n        console.error('Error logging out:', error);\n      }\n    },\n    async createStudyGroup({ commit, state }, studyGroup) {\n      try {\n        const newGroup = {\n          ...studyGroup,\n          members: [state.user.uid],\n          createdBy: state.user.uid,\n        };\n        await db.collection('studyGroups').add(newGroup);\n        commit('setAuthMessage', 'Study group created successfully!');\n      } catch (error) {\n        commit('setAuthError', error.message);\n        console.error('Error creating study group:', error);\n      }\n    },\n    async joinStudyGroup({ commit, state }, groupId) {\n      try {\n        const groupRef = db.collection('studyGroups').doc(groupId);\n        await groupRef.update({\n          members: firebase.firestore.FieldValue.arrayUnion(state.user.uid),\n        });\n        commit('setAuthMessage', 'Successfully joined the study group!');\n      } catch (error) {\n        commit('setAuthError', error.message);\n        console.error('Error joining study group:', error);\n      }\n    },\n  },\n  modules: {},\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}