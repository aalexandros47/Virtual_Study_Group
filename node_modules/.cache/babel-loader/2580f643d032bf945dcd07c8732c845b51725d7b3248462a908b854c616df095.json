{"ast":null,"code":"import DiscussionBoard from '../components/DiscussionBoard.vue';\nimport ResourceShare from '../components/ResourceShare.vue';\nexport default {\n  name: 'StudyGroup',\n  components: {\n    DiscussionBoard,\n    ResourceShare\n  },\n  data() {\n    return {\n      groupId: this.$route.params.id,\n      videoStream: null,\n      audioStream: null\n    };\n  },\n  methods: {\n    async toggleCamera() {\n      if (!this.videoStream) {\n        try {\n          this.videoStream = await navigator.mediaDevices.getUserMedia({\n            video: true\n          });\n          const videoElement = document.getElementById('video');\n          videoElement.srcObject = this.videoStream;\n        } catch (error) {\n          console.error('Error accessing camera:', error);\n        }\n      } else {\n        this.videoStream.getTracks().forEach(track => track.stop());\n        this.videoStream = null;\n      }\n    },\n    async toggleMicrophone() {\n      if (!this.audioStream) {\n        try {\n          this.audioStream = await navigator.mediaDevices.getUserMedia({\n            audio: true\n          });\n          const audioElement = document.getElementById('audio');\n          audioElement.srcObject = this.audioStream;\n        } catch (error) {\n          console.error('Error accessing microphone:', error);\n        }\n      } else {\n        this.audioStream.getTracks().forEach(track => track.stop());\n        this.audioStream = null;\n      }\n    }\n  }\n};","map":{"version":3,"names":["DiscussionBoard","ResourceShare","name","components","data","groupId","$route","params","id","videoStream","audioStream","methods","toggleCamera","navigator","mediaDevices","getUserMedia","video","videoElement","document","getElementById","srcObject","error","console","getTracks","forEach","track","stop","toggleMicrophone","audio","audioElement"],"sources":["/Users/ag47/virtual-study-group-platfor copy/src/views/StudyGroup.vue"],"sourcesContent":["<template>\n  <div class=\"study-group-page\">\n    <div class=\"video-container\">\n      <video id=\"video\" autoplay playsinline></video>\n      <audio id=\"audio\" autoplay></audio>\n    </div>\n    <div class=\"controls\">\n      <button @click=\"toggleCamera\">Toggle Camera</button>\n      <button @click=\"toggleMicrophone\">Toggle Microphone</button>\n    </div>\n    <div class=\"content\">\n      <DiscussionBoard :studyGroupId=\"groupId\" />\n      <ResourceShare :studyGroupId=\"groupId\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport DiscussionBoard from '../components/DiscussionBoard.vue';\nimport ResourceShare from '../components/ResourceShare.vue';\n\nexport default {\n  name: 'StudyGroup',\n  components: {\n    DiscussionBoard,\n    ResourceShare,\n  },\n  data() {\n    return {\n      groupId: this.$route.params.id,\n      videoStream: null,\n      audioStream: null,\n    };\n  },\n  methods: {\n    async toggleCamera() {\n      if (!this.videoStream) {\n        try {\n          this.videoStream = await navigator.mediaDevices.getUserMedia({\n            video: true,\n          });\n          const videoElement = document.getElementById('video');\n          videoElement.srcObject = this.videoStream;\n        } catch (error) {\n          console.error('Error accessing camera:', error);\n        }\n      } else {\n        this.videoStream.getTracks().forEach((track) => track.stop());\n        this.videoStream = null;\n      }\n    },\n    async toggleMicrophone() {\n      if (!this.audioStream) {\n        try {\n          this.audioStream = await navigator.mediaDevices.getUserMedia({\n            audio: true,\n          });\n          const audioElement = document.getElementById('audio');\n          audioElement.srcObject = this.audioStream;\n        } catch (error) {\n          console.error('Error accessing microphone:', error);\n        }\n      } else {\n        this.audioStream.getTracks().forEach((track) => track.stop());\n        this.audioStream = null;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.study-group-page {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2em;\n}\n\n.video-container {\n  width: 100%;\n  max-width: 600px;\n  margin-bottom: 1em;\n  position: relative;\n}\n\nvideo {\n  width: 100%;\n  border-radius: 8px;\n}\n\n.controls {\n  margin-bottom: 1em;\n}\n\n.content {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 1200px;\n}\n\n.discussion-board,\n.resource-share {\n  flex: 1;\n  margin: 0 1em;\n}\n</style>\n"],"mappings":"AAkBA,OAAOA,eAAc,MAAO,mCAAmC;AAC/D,OAAOC,aAAY,MAAO,iCAAiC;AAE3D,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVH,eAAe;IACfC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MAC9BC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAACH,WAAW,EAAE;QACrB,IAAI;UACF,IAAI,CAACA,WAAU,GAAI,MAAMI,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;YAC3DC,KAAK,EAAE;UACT,CAAC,CAAC;UACF,MAAMC,YAAW,GAAIC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;UACrDF,YAAY,CAACG,SAAQ,GAAI,IAAI,CAACX,WAAW;QAC3C,EAAE,OAAOY,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF,OAAO;QACL,IAAI,CAACZ,WAAW,CAACc,SAAS,CAAC,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;QAC7D,IAAI,CAACjB,WAAU,GAAI,IAAI;MACzB;IACF,CAAC;IACD,MAAMkB,gBAAgBA,CAAA,EAAG;MACvB,IAAI,CAAC,IAAI,CAACjB,WAAW,EAAE;QACrB,IAAI;UACF,IAAI,CAACA,WAAU,GAAI,MAAMG,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;YAC3Da,KAAK,EAAE;UACT,CAAC,CAAC;UACF,MAAMC,YAAW,GAAIX,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;UACrDU,YAAY,CAACT,SAAQ,GAAI,IAAI,CAACV,WAAW;QAC3C,EAAE,OAAOW,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;MACF,OAAO;QACL,IAAI,CAACX,WAAW,CAACa,SAAS,CAAC,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAChB,WAAU,GAAI,IAAI;MACzB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}