{"ast":null,"code":"import { db } from '../firebase';\nexport default {\n  name: 'DiscussionBoard',\n  props: ['studyGroupId'],\n  data() {\n    return {\n      message: '',\n      messages: []\n    };\n  },\n  methods: {\n    async postMessage() {\n      if (!this.message) return;\n      const newMessage = {\n        text: this.message,\n        createdAt: new Date()\n      };\n      await db.collection('studyGroups').doc(this.studyGroupId).collection('messages').add(newMessage);\n      this.message = '';\n      this.fetchMessages();\n    },\n    async fetchMessages() {\n      db.collection('studyGroups').doc(this.studyGroupId).collection('messages').orderBy('createdAt').onSnapshot(snapshot => {\n        this.messages = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n      });\n    }\n  },\n  created() {\n    this.fetchMessages();\n  }\n};","map":{"version":3,"names":["db","name","props","data","message","messages","methods","postMessage","newMessage","text","createdAt","Date","collection","doc","studyGroupId","add","fetchMessages","orderBy","onSnapshot","snapshot","docs","map","id","created"],"sources":["/Users/ag47/virtual-study-group-platfor Design/src/components/DiscussionBoard.vue"],"sourcesContent":["<template>\n  <div class=\"discussion-board\">\n    <h2>Discussion Board</h2>\n    <form @submit.prevent=\"postMessage\">\n      <div>\n        <label for=\"message\">Message:</label>\n        <textarea id=\"message\" v-model=\"message\" required></textarea>\n      </div>\n      <button type=\"submit\">Post Message</button>\n    </form>\n    <div v-if=\"messages.length > 0\">\n      <h3>Messages</h3>\n      <div v-for=\"msg in messages\" :key=\"msg.id\" class=\"message\">\n        <p>{{ msg.text }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { db } from '../firebase';\n\nexport default {\n  name: 'DiscussionBoard',\n  props: ['studyGroupId'],\n  data() {\n    return {\n      message: '',\n      messages: [],\n    };\n  },\n  methods: {\n    async postMessage() {\n      if (!this.message) return;\n\n      const newMessage = {\n        text: this.message,\n        createdAt: new Date(),\n      };\n\n      await db\n        .collection('studyGroups')\n        .doc(this.studyGroupId)\n        .collection('messages')\n        .add(newMessage);\n      this.message = '';\n      this.fetchMessages();\n    },\n    async fetchMessages() {\n      db.collection('studyGroups')\n        .doc(this.studyGroupId)\n        .collection('messages')\n        .orderBy('createdAt')\n        .onSnapshot((snapshot) => {\n          this.messages = snapshot.docs.map((doc) => ({\n            id: doc.id,\n            ...doc.data(),\n          }));\n        });\n    },\n  },\n  created() {\n    this.fetchMessages();\n  },\n};\n</script>\n\n<style scoped>\n.discussion-board {\n  padding: 2em;\n}\n.message {\n  margin-bottom: 1em;\n  padding: 1em;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n</style>\n"],"mappings":"AAoBA,SAASA,EAAC,QAAS,aAAa;AAEhC,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE,CAAC,cAAc,CAAC;EACvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACH,OAAO,EAAE;MAEnB,MAAMI,UAAS,GAAI;QACjBC,IAAI,EAAE,IAAI,CAACL,OAAO;QAClBM,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC;MAED,MAAMX,EAAC,CACJY,UAAU,CAAC,aAAa,EACxBC,GAAG,CAAC,IAAI,CAACC,YAAY,EACrBF,UAAU,CAAC,UAAU,EACrBG,GAAG,CAACP,UAAU,CAAC;MAClB,IAAI,CAACJ,OAAM,GAAI,EAAE;MACjB,IAAI,CAACY,aAAa,CAAC,CAAC;IACtB,CAAC;IACD,MAAMA,aAAaA,CAAA,EAAG;MACpBhB,EAAE,CAACY,UAAU,CAAC,aAAa,EACxBC,GAAG,CAAC,IAAI,CAACC,YAAY,EACrBF,UAAU,CAAC,UAAU,EACrBK,OAAO,CAAC,WAAW,EACnBC,UAAU,CAAEC,QAAQ,IAAK;QACxB,IAAI,CAACd,QAAO,GAAIc,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAER,GAAG,KAAM;UAC1CS,EAAE,EAAET,GAAG,CAACS,EAAE;UACV,GAAGT,GAAG,CAACV,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;IACN;EACF,CAAC;EACDoB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACP,aAAa,CAAC,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}