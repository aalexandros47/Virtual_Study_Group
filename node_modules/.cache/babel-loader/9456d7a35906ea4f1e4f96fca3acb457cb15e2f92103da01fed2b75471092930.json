{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-894bf716\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"session-scheduler\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Upcoming Sessions\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"topic\"\n}, \"Topic:\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"date\"\n}, \"Date:\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Add Session\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.sessions, session => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: session.id\n    }, _toDisplayString(session.date) + \" - \" + _toDisplayString(session.topic), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.addSession && $options.addSession(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"topic\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newSession.topic = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newSession.topic]])]), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newSession.date = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newSession.date]])]), _hoisted_5], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$props","sessions","session","key","id","date","_toDisplayString","topic","onSubmit","_cache","_withModifiers","args","$options","addSession","_hoisted_3","$event","$data","newSession","required","_hoisted_4","_hoisted_5"],"sources":["/Users/ag47/virtual-study-group-platform copy/src/components/SessionScheduler.vue"],"sourcesContent":["<template>\n  <div class=\"session-scheduler\">\n    <h3>Upcoming Sessions</h3>\n    <ul>\n      <li v-for=\"session in sessions\" :key=\"session.id\">\n        {{ session.date }} - {{ session.topic }}\n      </li>\n    </ul>\n    <form @submit.prevent=\"addSession\">\n      <div>\n        <label for=\"topic\">Topic:</label>\n        <input type=\"text\" id=\"topic\" v-model=\"newSession.topic\" required />\n      </div>\n      <div>\n        <label for=\"date\">Date:</label>\n        <input type=\"date\" id=\"date\" v-model=\"newSession.date\" required />\n      </div>\n      <button type=\"submit\">Add Session</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { db } from '../firebase';\n\nexport default {\n  name: 'SessionScheduler',\n  props: {\n    sessions: Array,\n  },\n  data() {\n    return {\n      newSession: {\n        topic: '',\n        date: '',\n      },\n    };\n  },\n  methods: {\n    async addSession() {\n      try {\n        const sessionRef = await db\n          .collection('studyGroups')\n          .doc(this.$route.params.id)\n          .collection('sessions')\n          .add(this.newSession);\n        this.newSession = { topic: '', date: '' };\n        this.$emit('session-added', sessionRef.id);\n      } catch (error) {\n        console.error('Error adding session:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.session-scheduler {\n  padding: 2em;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAmB;gEAC5BC,mBAAA,CAA0B,YAAtB,mBAAiB;gEAQjBA,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAO,GAAC,QAAM;gEAIzBD,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAM,GAAC,OAAK;gEAGzBD,mBAAA,CAA0C;EAAlCE,IAAI,EAAC;AAAQ,GAAC,aAAW;;uBAhBrCC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,UAA0B,EAC1BL,mBAAA,CAIK,c,kBAHHG,mBAAA,CAEKG,SAAA,QANXC,WAAA,CAI4BC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBP,mBAAA,CAEK;MAF4BQ,GAAG,EAAED,OAAO,CAACE;wBACzCF,OAAO,CAACG,IAAI,IAAG,KAAG,GAAAC,gBAAA,CAAGJ,OAAO,CAACK,KAAK;oCAGzCf,mBAAA,CAUO;IAVAgB,QAAM,EAAAC,MAAA,QAAAA,MAAA,MARjBC,cAAA,KAAAC,IAAA,KAQ2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BnB,mBAAA,CAGM,cAFJsB,UAAiC,E,gBACjCtB,mBAAA,CAAoE;IAA7DE,IAAI,EAAC,MAAM;IAACU,EAAE,EAAC,OAAO;IAXrC,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAW+CC,KAAA,CAAAC,UAAU,CAACV,KAAK,GAAAQ,MAAA;IAAEG,QAAQ,EAAR;iDAAlBF,KAAA,CAAAC,UAAU,CAACV,KAAK,E,KAEzDf,mBAAA,CAGM,cAFJ2B,UAA+B,E,gBAC/B3B,mBAAA,CAAkE;IAA3DE,IAAI,EAAC,MAAM;IAACU,EAAE,EAAC,MAAM;IAfpC,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAe8CC,KAAA,CAAAC,UAAU,CAACZ,IAAI,GAAAU,MAAA;IAAEG,QAAQ,EAAR;iDAAjBF,KAAA,CAAAC,UAAU,CAACZ,IAAI,E,KAEvDe,UAA0C,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}